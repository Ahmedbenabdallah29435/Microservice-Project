version: "3.9"
services:
  discovery:
    build: Atelier2
    ports:
      - "8761:8761"
    image: "discovery-service"

  plan:
    build: Atelier1
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:h2:file:C:/Users/AhmedBenAbdallah/testdb11212
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=Ines
      - SPRING_DATASOURCE_PASSWORD=
      - spring.h2.console.settings.webAllowOthers=true # Allow remote connections
    ports:
      - "8084:8084"
    image: "plan-service"

  rental:
    build: Phase-Spring
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:h2:file:C:/Users/AhmedBenAbdallah/testdb33
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=Ines
      - SPRING_DATASOURCE_PASSWORD=
      - spring.h2.console.settings.webAllowOthers=true # Allow remote connections
    ports:
      - "8000:8000"
    image: "rental-service"

  blog:
    build: Atelier3
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:h2:file:C:/Users/AhmedBenAbdallah/testdb3349940
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=Ines
      - SPRING_DATASOURCE_PASSWORD=
      - spring.h2.console.settings.webAllowOthers=true # Allow remote connections
    ports:
      - "8090:8090"
    image: "blogg-service"

  db:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
  
  app:
    build: .\GestionE-commerce
    restart: always
    ports:
      - '5000:5000'
    hostname: EcommerceManagements
    environment:
    - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
    image: gestionecommerce
    depends_on:
      - discovery
      - db

  sell:
    build: Sellers
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:h2:file:C:/Users/AhmedBenAbdallah/testdb222
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=Ines
      - SPRING_DATASOURCE_PASSWORD=
      - spring.h2.console.settings.webAllowOthers=true # Allow remote connections
    ports:
      - "8095:8095"
    image: "sell-service"    

  Apigateway:
    container_name: apigatewayserverv1
    build : API_Gateway_Server
    ports:
      - 8081:8081
    image: "apigatewayserver:v1"
    restart: always
    depends_on:
      - discovery
      - plan
      - app
      - blog
      - rental
      - sell
      
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE : http://discovery:8761/eureka/
      EUREKA_INSTANCE_LEASERENEWALINTERVALINSECONDS: 10
      EUREKA_INSTANCE_LEASEEXPIRATIONDURATIONINSECONDS: 30
      
      SPRING_CLOUD_GATEWAY_ROUTES_0_ID : plan
      SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://plan:8084 # Update t
      SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0 : Path=/api/plans/**

      SPRING_CLOUD_GATEWAY_ROUTES_1_ID: EcommerceServices
      SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://app:5000
      SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/produit/**

      SPRING_CLOUD_GATEWAY_ROUTES_2_ID : blog
      SPRING_CLOUD_GATEWAY_ROUTES_2_URI: http://blog:8090 # Update t
      SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0 : Path=/api/post/**

      SPRING_CLOUD_GATEWAY_ROUTES_3_ID : rental
      SPRING_CLOUD_GATEWAY_ROUTES_3_URI: http://rental:8000 # Update t
      SPRING_CLOUD_GATEWAY_ROUTES_3_PREDICATES_0 : Path=/rentaloffers/**

      SPRING_CLOUD_GATEWAY_ROUTES_4_ID : sell
      SPRING_CLOUD_GATEWAY_ROUTES_4_URI: http://sell:8094 # Update t
      SPRING_CLOUD_GATEWAY_ROUTES_4_PREDICATES_0 : Path=/api/seller/**

volumes:
  mongo-data:   